@use "../../index.scss" as *;

.navbar {
  position: sticky;
  top: 0;
  width: 100%;
  background-color: var(--background-secondary);
  box-shadow: 0 1px 10px rgba(0, 0, 0, 0.04);
  padding: $spacing-xs $spacing-sm;
  z-index: 100;
  @include transition(background-color, box-shadow);

  &__container {
    max-width: 1100px;
    margin: 0 auto;
    @include flex(row, space-between, center);
  }

  &__logo {
    font-family: $font-family-secondary;
    font-size: 1.3rem;
    font-weight: $font-weight-bold;
    @include text-gradient(var(--accent-primary), var(--accent-secondary));
    text-decoration: none;
  }

  &__menu {
    @include flex(row, flex-end, center, $spacing-sm);
    list-style: none;
    margin: 0;
    padding: 0;

    @include respond-to(md) {
      gap: $spacing-md;
    }
  }

  &__item {
    position: relative;

    a {
      color: var(--text-primary);
      text-decoration: none;
      font-weight: $font-weight-medium;
      padding: $spacing-xs/2 $spacing-xs/2;
      position: relative;
      @include transition(color);
      font-size: 0.9rem;

      &::after {
        content: "";
        position: absolute;
        bottom: -2px;
        left: 0;
        width: 0;
        height: 2px;
        background: linear-gradient(
          to right,
          var(--accent-primary),
          var(--accent-secondary)
        );
        @include transition(width);
        border-radius: $border-radius-full;
      }

      &:hover,
      &.active {
        color: var(--accent-primary);

        &::after {
          width: 100%;
        }
      }
    }
  }

  &__theme-toggle {
    background: none;
    border: none;
    color: var(--text-primary);
    cursor: pointer;
    padding: $spacing-xs/2;
    border-radius: $border-radius-sm;
    @include flex(row, center, center, $spacing-xs/2);
    @include transition(background-color, transform);

    &:hover {
      background-color: rgba(var(--accent-primary), 0.1);
      transform: translateY(-1px);
    }

    svg {
      font-size: 1.1rem;
    }
  }

  &__mobile-toggle {
    display: none;
    background: none;
    border: none;
    color: var(--text-primary);
    cursor: pointer;
    padding: $spacing-xs/2;

    @include respond-to(md-down) {
      display: block;
    }
  }

  @include respond-to(md-down) {
    &__menu {
      position: absolute;
      top: 100%;
      left: 0;
      width: 100%;
      background-color: var(--background-secondary);
      @include flex(column, flex-start, flex-start, $spacing-xs);
      padding: $spacing-sm;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
      transform: translateY(-10px);
      opacity: 0;
      visibility: hidden;
      @include transition(transform, opacity, visibility);

      &--open {
        transform: translateY(0);
        opacity: 1;
        visibility: visible;
      }
    }

    &__item {
      width: 100%;

      a {
        display: block;
        padding: $spacing-xs;
      }
    }
  }

  &--glass {
    background-color: rgba(var(--background-secondary), 0.8);
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
  }

  &--scrolled {
    padding: $spacing-xs/2 $spacing-sm;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);

    .navbar__logo {
      font-size: 1.2rem;
    }
  }
}

@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (min-width: $breakpoint-xs) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == md-down {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  }
}
